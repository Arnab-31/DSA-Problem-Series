Question Link: https://practice.geeksforgeeks.org/problems/find-position-of-set-bit3706/1

Solution: 

class Solution {
  public:
  
    // A helper method which returns 1 if n is a power of 2 else returns 0.
    int isPowerOfTwo(int n) 
    {
        if (n && (!(n & (n - 1))))
            return 1;
        else
            return 0;
    }
        
    int findPosition(int N) {
        
        if (!isPowerOfTwo(N)) 
            return -1; 
      
        int i = 1, pos = 1; 
      
        // Iterate through bits of n till we find a set bit 
        // i&n will be non-zero only when 'i' and 'n' have a set bit 
        // at same position 
        while (!(i & N)) { 
            // Unset current bit and set the next bit in 'i' 
            i = i << 1; 
      
            // increment position 
            ++pos; 
        } 
      
        return pos; 
    }
};
