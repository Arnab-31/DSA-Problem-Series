Question link: https://www.geeksforgeeks.org/copy-set-bits-in-a-range/

Solution: 

TC - O(1)

// C++ program to copy set bits in a given 
// range [l, r] from y to x. 
#include <bits/stdc++.h> 
using namespace std; 

// Copy set bits in range [l, r] from y to x. 
// Note that x is passed by reference and modified 
// by this function. 
void copySetBits(unsigned &x, unsigned y, 
				unsigned l, unsigned r) 
{ 
	// l and r must be between 1 to 32 
	if (l < 1 || r > 32) 
		return ; 

	// get the length of the mask 
	int maskLength = (1<<(r-l+1)) - 1; 

	// Shift the mask to the required position 
	// "&" with y to get the set bits at between 
	// l ad r in y 
	int mask = ((maskLength)<<(l-1)) & y ; 
	x = x | mask; 
} 

// Driver code 
int main() 
{ 
unsigned x = 10, y = 13, l = 2, r = 3; 
copySetBits(x, y, l, r); 
cout << "Modified x is " << x; 
return 0; 
} 
