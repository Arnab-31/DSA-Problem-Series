Question Link: https://practice.geeksforgeeks.org/problems/finding-the-numbers0215/1

Solution: 

class Solution
{
public:
    vector<int> singleNumber(vector<int>& nums) 
    {
        long long int i,j,a=0;
        for(i=0;i<nums.size();i++){
            a=a^nums[i];                    //Finding XOR of all the numbers
        }
        
    i=1;
    j=0;
     
     a=a^(a-1);                                 
     long long int count=0;
     while(a!=1){
        a=a/2;
        count++;                           //Finding the last set bit of XOR of all numbers
     }
     i=1;
     i=i<<count;
     long long int c=0,b=0,k;
     
     for(k=0;k<nums.size();k++){
        if((nums[k]&i)!=0){               //Diinding the set of numbers into twp groups 
            c=c^nums[k];
        }
        else{
            b=b^nums[k];
        }
    }
      
    vector<int> v;  
    if(c<=b){
        v.push_back(c);
        v.push_back(b);
    }
    else{
         v.push_back(b);
         v.push_back(c);
    }
    
    return v;
    }
     
};
