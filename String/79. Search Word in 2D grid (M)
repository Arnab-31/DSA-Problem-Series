https://practice.geeksforgeeks.org/problems/find-the-string-in-grid0111/1#


Apprach -  Traverse the whole grid, if at any point the character in grid matches the first character of the searched word, then search in all directions recursively


TC -O(n*m*k)
SC - O(1)

class Solution {
public:

    bool isPresent(vector<vector<char>>grid, int i, int j, string word, int cur, int dir)
    {   
        
        if(i >= grid.size() || j>=grid[0].size() || i < 0 || j < 0)
            return false;
            
        if(word[cur] != grid[i][j])
            return false;
            
        if(cur == word.length()-1)
            return true;
        
        if(dir == 0){
            if(isPresent(grid,i+1,j,word,cur+1,   1)   ||
               isPresent(grid,i-1,j,word,cur+1,   2)   ||
               isPresent(grid,i,j+1,word,cur+1,   3)   ||
               isPresent(grid,i,j-1,word,cur+1,   4)   ||
               isPresent(grid,i+1,j+1,word,cur+1, 5)   ||
               isPresent(grid,i-1,j-1,word,cur+1, 6)   ||
               isPresent(grid,i-1,j+1,word,cur+1, 7)   ||
               isPresent(grid,i+1,j-1,word,cur+1, 8)
            )
                return true;
        }
        else if(dir == 1)
            return isPresent(grid,i+1,j,word,cur+1,     1);
        else if(dir == 2)
            return isPresent(grid,i-1,j,word,cur+1,     2);
        else if(dir == 3)
            return isPresent(grid,i,j+1,word,cur+1,     3);
        else if(dir == 4)
            return isPresent(grid,i,j-1,word,cur+1,     4);
        else if(dir == 5)
            return isPresent(grid,i+1,j+1,word,cur+1,   5);
        else if(dir == 6)
            return isPresent(grid,i-1,j-1,word,cur+1,   6);
        else if(dir == 7)
            return isPresent(grid,i-1,j+1,word,cur+1,   7);
        else if(dir == 8)
            return isPresent(grid,i+1,j-1,word,cur+1,   8);
            
       
        
        
        return false;
        
    }
	vector<vector<int>>searchWord(vector<vector<char>>grid, string word){
	    
	    vector<vector<int>>ans;
	    for(int i=0;i<grid.size();i++)
	    {
	        for(int j=0;j<grid[0].size();j++)
	        {
	            if(isPresent(grid,i,j,word,0,0))
	            {
	                vector<int>temp;
	                temp.push_back(i);
	                temp.push_back(j);
	                ans.push_back(temp);
	            }
	        }
	    }
	    
	    return ans;
	}
};
