https://practice.geeksforgeeks.org/problems/minimum-sum4058/1

Approach - First store all the 0, then 1 and then 2
TC - O(n)

class Solution{   
public:
    string solve(int arr[], int n) {
        // code here
        #define ll long long int
        priority_queue <ll, vector<ll>, greater<ll> >h;
        
        for(int i = 0;i<n;i++)
            h.push(arr[i]);
            
        int flag=0;
        ll s1=0,s2=0;
        while(!h.empty())
        {
            ll a = h.top();
            h.pop();
            if(flag==0)
            {
                s1 = s1 * 10 + a;
                flag=1;
            }
            else
            {
                s2 = s2 * 10 + a;
                flag=0;
            }
        }
        
        ostringstream str1;
  
    // Sending a number as a stream into output
    // string
    

    str1 << s1 + s2;
  
    // the str() coverts number into string
    string geek = str1.str();
    return geek;
        
    }
};
