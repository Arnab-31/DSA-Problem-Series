Question: https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1

Solution: 

bool sortingOrder (Item a, Item b){
    return ((a.value/(double)a.weight) > (b.value/(double)b.weight));       //sorting in increasing order of value:weight ratio
}

// function to return fractionalweights
double fractionalKnapsack(int W, Item arr[], int n)
{
    sort(arr,arr+n, sortingOrder);
    double wtLeft=W;
    double valIn=0;
    for(int i=0;i<n;i++){
        if(arr[i].weight <= wtLeft){
            valIn+=arr[i].value;
            wtLeft-=arr[i].weight;
        }else{
            valIn = valIn + ( ( (double)(arr[i].value)/arr[i].weight )*wtLeft);   //taking fractional value if weight exceeds limit
            wtLeft=0;
        }
        
        if(wtLeft==0)
            break;
    }
    
    return valIn;
}
